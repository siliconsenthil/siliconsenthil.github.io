<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[siliconsenthil.in]]></title>
  <link href="http://siliconsenthil.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://siliconsenthil.herokuapp.com/"/>
  <updated>2013-01-19T13:53:32+05:30</updated>
  <id>http://siliconsenthil.herokuapp.com/</id>
  <author>
    <name><![CDATA[Senthil V S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How we debugged rails memory leak]]></title>
    <link href="http://siliconsenthil.herokuapp.com/blog/2013/01/19/how-we-debugged-rails-memory-leak/"/>
    <updated>2013-01-19T13:29:00+05:30</updated>
    <id>http://siliconsenthil.herokuapp.com/blog/2013/01/19/how-we-debugged-rails-memory-leak</id>
    <content type="html"><![CDATA[<p>We run our app on heroku and kept on getting R14s. Frustrating..</p>

<ul>
<li>Figured out what pages create R14

<ul>
<li>Observe pattern of usage</li>
<li>Load test app with multiple usage paths. Figure out which falls soon.</li>
</ul>
</li>
</ul>


<p>This is more of asking more questions to users and making guesses. We had a page that was most frequently used. We did a 
load test on that page and within in minutes it ended up with R14.</p>


<ul>
<li>Replicated the leak in local machine

<ul>
<li>Run the app in production environment</li>
<li>Use <code>vmmap</code> to find out memory usage pattern. (You can use smap or pmap if you are using linux.)

<pre><code>    #!/bin/bash
    while :
      do
        echo `vmmap $PROCESS_ID | grep ^DefaultMallocZone_0x`
        sleep 1
      done
</code></pre></li>
<li>The o/p looks like this.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>

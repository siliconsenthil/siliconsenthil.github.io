<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on siliconsenthil</title><link>https://siliconsenthil.in/blog/</link><description>Recent content in Blogs on siliconsenthil</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Mar 2019 17:30:00 +0530</lastBuildDate><atom:link href="https://siliconsenthil.in/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>How we built our own heroku</title><link>https://siliconsenthil.in/blog/2019-03-09-how-we-built-our-own-heroku/</link><pubDate>Sat, 09 Mar 2019 17:30:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2019-03-09-how-we-built-our-own-heroku/</guid><description>At Simpl, we faced a challenge to run a polyglot microservices based platform in auto-scalable and secure manner. We did not have dedicated DevOps person. We could not go ahead with a PaaS solution for lack of customizability. So we built our own solution called cloudlift. I and Jeechu presented this at multiple meetups.
Sharing the presentation here&amp;hellip;</description></item><item><title>So, you built webhooks? And wanna test</title><link>https://siliconsenthil.in/blog/2017-04-02-so-you-built-webhooks-and-wanna-test/</link><pubDate>Sun, 02 Apr 2017 23:28:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2017-04-02-so-you-built-webhooks-and-wanna-test/</guid><description>When you build public facing APIs, there are operations that could not fit enough into request-response cycle. Especially, when it involves user interaction.
Take an example of sending email. You can expose an API endpoint for clients to send email. But whenever the email is opened, the client want to do some action. They can keep polling you and get the status of the email of course. But, that&amp;rsquo;s suboptimal on both sides.</description></item><item><title>Why scala should be your next programming language?</title><link>https://siliconsenthil.in/blog/2014-06-27-why-scala-why-now/</link><pubDate>Fri, 27 Jun 2014 10:03:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2014-06-27-why-scala-why-now/</guid><description>I with Aravindh gave a talk @ Geeknight, Chennai on 26-JUN-2014. Sharing the presentation here.</description></item><item><title>VCR - Match body</title><link>https://siliconsenthil.in/blog/2014-04-02-vcr-match-body/</link><pubDate>Wed, 02 Apr 2014 18:50:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2014-04-02-vcr-match-body/</guid><description>We had to have make external API calls and we used vcr to record and replay in our integration tests. All was going on well.
Despite this coverage, we saw our code breaking in production due to small chages in request xml body. We wanted our integration spec to cover these too. By default, vcr matches request method and url. We wanted it to match the post body too. Simple match by body does not solve as it does plain string match.</description></item><item><title>Apache Camel with Scala: Extending DSL</title><link>https://siliconsenthil.in/blog/2013-07-11-apache-camel-with-scala-extending-dsl/</link><pubDate>Thu, 11 Jul 2013 07:58:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-07-11-apache-camel-with-scala-extending-dsl/</guid><description>Let&amp;rsquo;s take a very simple use case of integrating with a http endpoint which has an authentication mechanism.
from(&amp;#34;someWhere&amp;#34;) //Do some processing .setHeader(&amp;#34;Authorization&amp;#34;, _ =&amp;gt; &amp;#34;OAuth anObfuscatedTokenString&amp;#34;) .setHeader(Exchange.HTTP_METHOD, &amp;#34;GET&amp;#34;) .to(&amp;#34;http://someServer.com&amp;#34;) .process(//Do something with response) from(&amp;#34;someWhereElse&amp;#34;) //Do some processing .setHeader(&amp;#34;Authorization&amp;#34;, _ =&amp;gt; &amp;#34;OAuth anObfuscatedTokenString&amp;#34;) .setHeader(Exchange.HTTP_METHOD, &amp;#34;POST&amp;#34;) .to(&amp;#34;http://someServer.com&amp;#34;) .process(//Do something with response) You can clearly see if have many routes like this, there will be a lot of duplication.
So we wanted to extend the DSL so that these kind of duplications are avoided and we could come up with more readable routes.</description></item><item><title>Apache Camel with Scala: Testing Styles</title><link>https://siliconsenthil.in/blog/2013-07-07-apache-camel-with-scala-testing-styles/</link><pubDate>Sun, 07 Jul 2013 15:39:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-07-07-apache-camel-with-scala-testing-styles/</guid><description>Scala with Camel is a very powerful combination for integration. Camel has fantastic support for testing. It&amp;rsquo;s very easy and useful to test-drive the integration. Following are few styles when it comes to testing camel with scala.
Use CamelTestSupport, JUnit style CamelTestSupport already has JUnit annotations to run do setup and teardown in JUnit test suite. The simplest way to get started is to use this with ScalaTest. ScalaTest already has JUnitSuite trait to have JUnit style tests.</description></item><item><title>Integer.parseInt('God') = ???</title><link>https://siliconsenthil.in/blog/2013-03-26-integer-dot-parseint-god/</link><pubDate>Tue, 26 Mar 2013 22:47:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-03-26-integer-dot-parseint-god/</guid><description>&lt;p>Migrated from: &lt;a href="http://monophilo.blogspot.in/2010/03/integerparseintgod.html">My old post&lt;/a>&lt;/p>
&lt;p>Today people visit temple for so many reasons. Fundamentally, those reasons come out of fear or greed depending on the situation. During recession people ask god to save job (out of fear) or otherwise, they ask for promotion or better job (out of greed).&lt;/p></description></item><item><title>Iteration, Recursion and Tail recursion</title><link>https://siliconsenthil.in/blog/2013-02-15-iteration-recursion-and-tail-recursion/</link><pubDate>Fri, 15 Feb 2013 12:38:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-02-15-iteration-recursion-and-tail-recursion/</guid><description>&lt;p>Courtesy: &lt;a href="https://class.coursera.org/progfun-2012-001/class/index">Functional Programming Principles in Scala&lt;/a>&lt;/p>
&lt;p>&lt;strong>Problem:&lt;/strong> Given &lt;em>a&lt;/em> and &lt;em>b&lt;/em>,&lt;br/>find the sum of range of numbers between &lt;em>a&lt;/em> and &lt;em>b&lt;/em>.&lt;br>E.g. Given 1 and 4, the result is 10 (1+2+3+4). Simple.&lt;/p>
&lt;p>&lt;strong>Language:&lt;/strong> Scala&lt;/p>
&lt;p>Let&amp;rsquo;s do this with programmers&amp;rsquo; favorite, Iteration&lt;/p></description></item><item><title>Memory leaks with &lt;i>validation_scopes&lt;/i></title><link>https://siliconsenthil.in/blog/2013-01-19-validation-scopes-leaks-memory/</link><pubDate>Sat, 19 Jan 2013 17:50:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-01-19-validation-scopes-leaks-memory/</guid><description>&lt;p>We had a requirement in our app to ignore few validations by just showing warnings to user and continuing the object to save.
The gem &lt;a href="https://github.com/gtd/validation_scopes">&lt;em>validation_scopes&lt;/em>&lt;/a> seemed to be a right choice and we used it.&lt;/p>
&lt;p>We faced memory issues and &lt;a href="https://siliconsenthil.in/blog/2013/01/19/how-we-debugged-rails-memory-leak/">figured out&lt;/a>
&lt;code>model.has_warnings?&lt;/code> of &lt;em>validation_scopes&lt;/em> was causing issue.&lt;/p></description></item><item><title>How we debugged memory leak in a rails app.</title><link>https://siliconsenthil.in/blog/2013-01-19-how-we-debugged-rails-memory-leak/</link><pubDate>Sat, 19 Jan 2013 13:29:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2013-01-19-how-we-debugged-rails-memory-leak/</guid><description>&lt;p>We run our app on heroku and kept on getting &lt;a href="https://devcenter.heroku.com/articles/error-codes#r14-memory-quota-exceeded">R14&lt;/a>s. Our google and stackoverflow skills did provide
few suggestions and but din&amp;rsquo;t help much. We used few tools (&lt;a href="https://github.com/brynary/rack-bug">rack_bug&lt;/a>, &lt;a href="https://github.com/noahd1/oink">oink&lt;/a>) see the memory usage. They provided who use how much&lt;br>
but we could make further progress with that. So here&amp;rsquo;s what we did to find out.&lt;/p></description></item><item><title>Onclick link disabling with jQuery</title><link>https://siliconsenthil.in/blog/2009-09-15-onclick-link-disabling-with-jquery/</link><pubDate>Fri, 15 Apr 2011 16:07:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2009-09-15-onclick-link-disabling-with-jquery/</guid><description>&lt;p>Days back I have come across a common requirement to disable link on clicking it once. Typically, it&amp;rsquo;s because on click of those links some AJAX thins happen and some fragments of the page gets updated.&lt;/p></description></item><item><title>If else or Switch case to Polymorphism</title><link>https://siliconsenthil.in/blog/2011-04-15-if-else-or-switch-case-to-polymorphism/</link><pubDate>Fri, 15 Apr 2011 15:59:00 +0530</pubDate><guid>https://siliconsenthil.in/blog/2011-04-15-if-else-or-switch-case-to-polymorphism/</guid><description>&lt;p>If you try to express your logic in if-else way like this,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">getSoundIfElseWay&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String animal&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>animal&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Dog&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Bark&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>animal&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Cat&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Mew&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>animal&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Lion&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Roar&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>then polymorphic way would be,&lt;/p></description></item></channel></rss>